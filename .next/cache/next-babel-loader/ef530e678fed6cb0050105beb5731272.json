{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/thomasdhome/Documents/thomas/Princeton/Job/ELE206/VerilogTrafficLightViewer/pages/components/FileReader.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport VCDParser from 'vcd-parser';\nimport { Upload, message, Button, Typography } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport read from 'file-reader';\nvar Title = Typography.Title;\n\nvar FileReader = function FileReader(vcdObjSetter) {\n  var uploadProps = {\n    name: 'file',\n    accept: \".vcd\",\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    headers: {\n      authorization: 'authorization-text'\n    },\n    onChange: function onChange(info) {\n      if (info.file.status === 'done') {\n        message.success(\"\".concat(info.file.name, \" file uploaded successfully\"));\n        var string = info.file.originFileObj;\n        var test = read.file(string);\n        console.log(string);\n        console.log(test);\n        VCDParser.parse(string).then(function (parsedData) {\n          console.log(parsedData);\n          vcdObjSetter(parsedData);\n        })[\"catch\"](function (err) {\n          console.error(err);\n        });\n      } else if (info.file.status === 'error') {\n        message.error(\"\".concat(info.file.name, \" file upload failed.\"));\n      }\n    }\n  };\n  return __jsx(React.Fragment, null, __jsx(Title, {\n    level: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"CSV upload\"), __jsx(Upload, _extends({}, uploadProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, __jsx(UploadOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }), \" Click to Upload\")));\n};\n\n_c = FileReader;\nexport default FileReader;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileReader\");","map":{"version":3,"sources":["/Users/thomasdhome/Documents/thomas/Princeton/Job/ELE206/VerilogTrafficLightViewer/pages/components/FileReader.tsx"],"names":["React","VCDParser","Upload","message","Button","Typography","UploadOutlined","read","Title","FileReader","vcdObjSetter","uploadProps","name","accept","action","headers","authorization","onChange","info","file","status","success","string","originFileObj","test","console","log","parse","then","parsedData","err","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,EAAkCC,UAAlC,QAAoD,MAApD;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,IAAP,MAAiB,aAAjB;IAIQC,K,GAAUH,U,CAAVG,K;;AACR,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,YAAD,EAAkB;AACjC,MAAMC,WAAW,GAAG;AAChBC,IAAAA,IAAI,EAAE,MADU;AAEhBC,IAAAA,MAAM,EAAE,MAFQ;AAGhBC,IAAAA,MAAM,EAAE,kDAHQ;AAIhBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAE;AADV,KAJO;AAOhBC,IAAAA,QAPgB,oBAOPC,IAPO,EAOD;AACX,UAAIA,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,MAAzB,EAAiC;AAC7BjB,QAAAA,OAAO,CAACkB,OAAR,WAAmBH,IAAI,CAACC,IAAL,CAAUP,IAA7B;AACA,YAAMU,MAAM,GAAGJ,IAAI,CAACC,IAAL,CAAUI,aAAzB;AAGA,YAAMC,IAAI,GAAGjB,IAAI,CAACY,IAAL,CAAUG,MAAV,CAAb;AAEAG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAvB,QAAAA,SAAS,CAAC0B,KAAV,CAAgBL,MAAhB,EACKM,IADL,CACU,UAAAC,UAAU,EAAI;AAChBJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,UAAZ;AACAnB,UAAAA,YAAY,CAACmB,UAAD,CAAZ;AACH,SAJL,WAKW,UAAAC,GAAG,EAAI;AACVL,UAAAA,OAAO,CAACM,KAAR,CAAcD,GAAd;AACH,SAPL;AAQH,OAjBD,MAiBO,IAAIZ,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,OAAzB,EAAkC;AACrCjB,QAAAA,OAAO,CAAC4B,KAAR,WAAiBb,IAAI,CAACC,IAAL,CAAUP,IAA3B;AACH;AACJ;AA5Be,GAApB;AA+BA,SACI,4BACI,MAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,MAAC,MAAD,eAAYD,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,qBADJ,CAFJ,CADJ;AAUH,CA1CD;;KAAMF,U;AA4CN,eAAeA,UAAf","sourcesContent":["import React from 'react'\nimport VCDParser from 'vcd-parser'\nimport { Upload, message, Button, Typography } from 'antd'\nimport { UploadOutlined } from '@ant-design/icons'\nimport read from 'file-reader'\nimport * as Papa from 'papaparse'\nimport { parse } from 'path'\n\nconst { Title } = Typography\nconst FileReader = (vcdObjSetter) => {\n    const uploadProps = {\n        name: 'file',\n        accept: \".vcd\",\n        action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n        headers: {\n            authorization: 'authorization-text',\n        },\n        onChange(info) {\n            if (info.file.status === 'done') {\n                message.success(`${info.file.name} file uploaded successfully`)\n                const string = info.file.originFileObj\n\n\n                const test = read.file(string);\n\n                console.log(string)\n                console.log(test)\n                VCDParser.parse(string)\n                    .then(parsedData => {\n                        console.log(parsedData)\n                        vcdObjSetter(parsedData)\n                    })\n                    .catch(err => {\n                        console.error(err);\n                    });\n            } else if (info.file.status === 'error') {\n                message.error(`${info.file.name} file upload failed.`)\n            }\n        },\n    }\n\n    return (\n        <>\n            <Title level={2}>CSV upload</Title>\n            <Upload {...uploadProps}>\n                <Button>\n                    <UploadOutlined /> Click to Upload\n        </Button>\n            </Upload>\n        </>\n    )\n}\n\nexport default FileReader\n\n\n"]},"metadata":{},"sourceType":"module"}