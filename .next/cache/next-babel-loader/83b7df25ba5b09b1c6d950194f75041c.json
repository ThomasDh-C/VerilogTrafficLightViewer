{"ast":null,"code":"var _jsxFileName = \"/Users/thomasdhome/Documents/thomas/Princeton/Job/ELE206/VerilogTrafficLightViewer/pages/components/SignalCard.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Card } from 'antd';\nimport TrafficLight from './TrafficLight';\nimport DropdownSelector from './DropdownSelector';\n\nconst SignalCard = props => {\n  const [SignalAvailableIndex, setSignalAvailableIndex] = React.useState(0);\n  let counter = 0;\n\n  if (props.vcdObj.hasOwnProperty('signal')) {\n    const timeArray = props.vcdObj.signal[SignalAvailableIndex].wave; // current requested time is props.index\n\n    while (props.index > timeArray[counter][0] && counter < timeArray.length) {\n      counter++;\n    }\n\n    if (counter == timeArray.length) {\n      counter--;\n    } else if (props.index < timeArray[counter][0]) {\n      counter = counter - 1;\n    }\n  }\n\n  const signalString = props.vcdObj.hasOwnProperty('signal') ? props.vcdObj.signal[SignalAvailableIndex].wave[counter][1] : '000';\n  return __jsx(Card, {\n    title: props.street,\n    style: {\n      width: 300,\n      marginRight: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(DropdownSelector, {\n    index: props.index,\n    vcdObj: props.vcdObj,\n    setSignalAvailableIndex: setSignalAvailableIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), __jsx(TrafficLight, {\n    value: signalString,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default SignalCard;","map":{"version":3,"sources":["/Users/thomasdhome/Documents/thomas/Princeton/Job/ELE206/VerilogTrafficLightViewer/pages/components/SignalCard.tsx"],"names":["React","Card","TrafficLight","DropdownSelector","SignalCard","props","SignalAvailableIndex","setSignalAvailableIndex","useState","counter","vcdObj","hasOwnProperty","timeArray","signal","wave","index","length","signalString","street","width","marginRight"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAIA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDP,KAAK,CAACQ,QAAN,CAAe,CAAf,CAAxD;AAEA,MAAIC,OAAO,GAAG,CAAd;;AACA,MAAIJ,KAAK,CAACK,MAAN,CAAaC,cAAb,CAA4B,QAA5B,CAAJ,EAA2C;AACvC,UAAMC,SAAS,GAAGP,KAAK,CAACK,MAAN,CAAaG,MAAb,CAAoBP,oBAApB,EAA0CQ,IAA5D,CADuC,CAEvC;;AACA,WAAOT,KAAK,CAACU,KAAN,GAAcH,SAAS,CAACH,OAAD,CAAT,CAAmB,CAAnB,CAAd,IAAuCA,OAAO,GAAGG,SAAS,CAACI,MAAlE,EAA0E;AACtEP,MAAAA,OAAO;AACV;;AACD,QAAIA,OAAO,IAAIG,SAAS,CAACI,MAAzB,EAAiC;AAAEP,MAAAA,OAAO;AAAI,KAA9C,MACK,IAAIJ,KAAK,CAACU,KAAN,GAAcH,SAAS,CAACH,OAAD,CAAT,CAAmB,CAAnB,CAAlB,EAAyC;AAAEA,MAAAA,OAAO,GAAGA,OAAO,GAAG,CAApB;AAAuB;AAC1E;;AAED,QAAMQ,YAAY,GAAIZ,KAAK,CAACK,MAAN,CAAaC,cAAb,CAA4B,QAA5B,IAAwCN,KAAK,CAACK,MAAN,CAAaG,MAAb,CAAoBP,oBAApB,EAA0CQ,IAA1C,CAA+CL,OAA/C,EAAwD,CAAxD,CAAxC,GAAqG,KAA3H;AAEA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,KAAK,CAACa,MAAnB;AAA2B,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,WAAW,EAAE;AAA3B,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEf,KAAK,CAACU,KAA/B;AAAsC,IAAA,MAAM,EAAEV,KAAK,CAACK,MAApD;AAA4D,IAAA,uBAAuB,EAAEH,uBAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEU,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CAtBD;;AAwBA,eAAeb,UAAf","sourcesContent":["import React from 'react'\nimport { Card } from 'antd';\nimport TrafficLight from './TrafficLight'\nimport DropdownSelector from './DropdownSelector'\n\n\n\nconst SignalCard = (props) => {\n    const [SignalAvailableIndex, setSignalAvailableIndex] = React.useState(0)\n\n    let counter = 0\n    if (props.vcdObj.hasOwnProperty('signal')) {\n        const timeArray = props.vcdObj.signal[SignalAvailableIndex].wave\n        // current requested time is props.index\n        while (props.index > timeArray[counter][0] && counter < timeArray.length) {\n            counter++\n        }\n        if (counter == timeArray.length) { counter-- }\n        else if (props.index < timeArray[counter][0]) { counter = counter - 1 }\n    }\n\n    const signalString = (props.vcdObj.hasOwnProperty('signal') ? props.vcdObj.signal[SignalAvailableIndex].wave[counter][1] : '000')\n\n    return (\n        <Card title={props.street} style={{ width: 300, marginRight: 30 }}>\n            <DropdownSelector index={props.index} vcdObj={props.vcdObj} setSignalAvailableIndex={setSignalAvailableIndex} />\n            <TrafficLight value={signalString} />\n        </Card>\n    )\n}\n\nexport default SignalCard"]},"metadata":{},"sourceType":"module"}