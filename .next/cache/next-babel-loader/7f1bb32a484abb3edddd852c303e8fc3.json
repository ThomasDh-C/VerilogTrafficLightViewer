{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/thomasdhome/Documents/thomas/Princeton/Job/ELE206/VerilogTrafficLightViewer/pages/components/FileReader.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Upload, message, Button, Typography } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport * as Papa from 'papaparse';\nvar Title = Typography.Title;\n\nvar FileReader = function FileReader(vcdObjSetter) {\n  var uploadProps = {\n    name: 'file',\n    accept: \".vcd\",\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    headers: {\n      authorization: 'authorization-text'\n    },\n    onChange: function onChange(info) {\n      if (info.file.status === 'done') {\n        message.success(\"\".concat(info.file.name, \" file uploaded successfully\"));\n        Papa.parse(info.file.originFileObj, {\n          complete: function complete(results) {\n            props.setOrgData(results.data);\n          }\n        });\n      } else if (info.file.status === 'error') {\n        message.error(\"\".concat(info.file.name, \" file upload failed.\"));\n      }\n    }\n  };\n  return __jsx(React.Fragment, null, __jsx(Title, {\n    level: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"CSV upload\"), __jsx(Upload, _extends({}, uploadProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), __jsx(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(UploadOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), \" Click to Upload\")));\n};\n\n_c = FileReader;\nexport default FileReader;\nVCDParser.parse(\"\\n\\t$date\\n\\tTue Feb 12 14:01:15 2019\\n\\t$end\\n\\t$version\\n\\tIcarus Verilog\\n\\t$end\\n\\t$timescale\\n\\t1ns\\n\\t$end\\n\\t$scope module test_tb $end\\n\\t$var reg 1 ! clk $end\\n\\t$var wire 1 \\\" rst $end\\n\\t$upscope $end\\n\\t$enddefinitions $end\\n\\t#0\\n\\t$dumpvars\\n\\t0\\\"\\n\\t0!\\n\\t$end\\n\\t#15\\n\\t1\\\"\\n\\t#20\\n\\t1!\\n\\t#40\\n\\t0!\\n\\t#60\\n\\t1!\\n\\t#80\\n\\t0!\\n\\t#100\\n\\t1!\\n\\t#115\\n\").then(function (parsedData) {\n  console.log(parsedData); // {\n  // \t\"date\": \"Tue Feb 12 14:01:15 2019\",\n  // \t\"version\": \"Icarus Verilog\",\n  // \t\"timescale\": \"1ns\",\n  // \t\"endtime\": \"115\",\n  // \t\"scale\": \"1ns\",\n  // \t\"signal\": [\n  // \t\t{\n  // \t\t\t\"type\": \"reg\",\n  // \t\t\t\"size\": 1,\n  // \t\t\t\"refName\": \"!\",\n  // \t\t\t\"signalName\": \"clk\",\n  // \t\t\t\"module\": \"test_tb\",\n  // \t\t\t\"name\": \"test_tb.clk\",\n  // \t\t\t\"wave\": [\n  // \t\t\t\t[\n  // \t\t\t\t\t\"0\",\n  // \t\t\t\t\t\"0\"\n  // \t\t\t\t],\n  // \t\t\t\t[\n  // \t\t\t\t\t\"20\",\n  // \t\t\t\t\t\"1\"\n  // \t\t\t\t],\n  // \t\t\t\t[\n  // \t\t\t\t\t\"40\",\n  // \t\t\t\t\t\"0\"\n  // \t\t\t\t],\n  // \t\t\t\t[\n  // \t\t\t\t\t\"60\",\n  // \t\t\t\t\t\"1\"\n  // \t\t\t\t],\n  // \t\t\t\t[\n  // \t\t\t\t\t\"80\",\n  // \t\t\t\t\t\"0\"\n  // \t\t\t\t],\n  // \t\t\t\t[\n  // \t\t\t\t\t\"100\",\n  // \t\t\t\t\t\"1\"\n  // \t\t\t\t]\n  // \t\t\t]\n  // \t\t},\n  // \t\t{\n  // \t\t\t\"type\": \"wire\",\n  // \t\t\t\"size\": 1,\n  // \t\t\t\"refName\": \"\\\"\",\n  // \t\t\t\"signalName\": \"rst\",\n  // \t\t\t\"module\": \"test_tb\",\n  // \t\t\t\"name\": \"test_tb.rst\",\n  // \t\t\t\"wave\": [\n  // \t\t\t\t[\n  // \t\t\t\t\t\"0\",\n  // \t\t\t\t\t\"0\"\n  // \t\t\t\t],\n  // \t\t\t\t[\n  // \t\t\t\t\t\"15\",\n  // \t\t\t\t\t\"1\"\n  // \t\t\t\t]\n  // \t\t\t]\n  // \t\t}\n  // \t]\n  // }\n})[\"catch\"](function (err) {\n  console.error(err);\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"FileReader\");","map":{"version":3,"sources":["/Users/thomasdhome/Documents/thomas/Princeton/Job/ELE206/VerilogTrafficLightViewer/pages/components/FileReader.tsx"],"names":["React","Upload","message","Button","Typography","UploadOutlined","Papa","Title","FileReader","vcdObjSetter","uploadProps","name","accept","action","headers","authorization","onChange","info","file","status","success","parse","originFileObj","complete","results","props","setOrgData","data","error","VCDParser","then","parsedData","console","log","err"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,EAAkCC,UAAlC,QAAoD,MAApD;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;IAEQC,K,GAAUH,U,CAAVG,K;;AACR,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,YAAD,EAAkB;AACnC,MAAMC,WAAW,GAAG;AAClBC,IAAAA,IAAI,EAAE,MADY;AAElBC,IAAAA,MAAM,EAAC,MAFW;AAGlBC,IAAAA,MAAM,EAAE,kDAHU;AAIlBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE;AADR,KAJS;AAOlBC,IAAAA,QAPkB,oBAOTC,IAPS,EAOH;AACb,UAAIA,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,MAAzB,EAAiC;AAC/BjB,QAAAA,OAAO,CAACkB,OAAR,WAAmBH,IAAI,CAACC,IAAL,CAAUP,IAA7B;AACAL,QAAAA,IAAI,CAACe,KAAL,CAAWJ,IAAI,CAACC,IAAL,CAAUI,aAArB,EAAoC;AAClCC,UAAAA,QAAQ,EAAE,kBAASC,OAAT,EAAkB;AAC1BC,YAAAA,KAAK,CAACC,UAAN,CAAiBF,OAAO,CAACG,IAAzB;AACD;AAHiC,SAApC;AAKD,OAPD,MAOO,IAAIV,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,OAAzB,EAAkC;AACvCjB,QAAAA,OAAO,CAAC0B,KAAR,WAAiBX,IAAI,CAACC,IAAL,CAAUP,IAA3B;AACD;AACF;AAlBiB,GAApB;AAqBA,SACE,4BACE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,MAAC,MAAD,eAAYD,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,qBADF,CAFF,CADF;AAUD,CAhCD;;KAAMF,U;AAkCN,eAAeA,UAAf;AAGAqB,SAAS,CAACR,KAAV,kXAoCES,IApCF,CAoCO,UAAAC,UAAU,EAAI;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ,EADmB,CAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnGF,WAoGQ,UAAAG,GAAG,EAAI;AACbF,EAAAA,OAAO,CAACJ,KAAR,CAAcM,GAAd;AACA,CAtGF","sourcesContent":["import React from 'react'\nimport { Upload, message, Button, Typography } from 'antd'\nimport { UploadOutlined } from '@ant-design/icons'\nimport * as Papa from 'papaparse' \n\nconst { Title } = Typography\nconst FileReader = (vcdObjSetter) => {\n  const uploadProps = {\n    name: 'file',\n    accept:\".vcd\",\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    headers: {\n      authorization: 'authorization-text',\n    },\n    onChange(info) {\n      if (info.file.status === 'done') {\n        message.success(`${info.file.name} file uploaded successfully`)\n        Papa.parse(info.file.originFileObj, {\n          complete: function(results) {\n            props.setOrgData(results.data);\n          }\n        })\n      } else if (info.file.status === 'error') {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    },\n  }\n  \n  return (\n    <>\n      <Title level={2}>CSV upload</Title>\n      <Upload {...uploadProps}>\n        <Button>\n          <UploadOutlined /> Click to Upload\n        </Button>\n      </Upload>\n    </>\n  )\n}\n\nexport default FileReader\n\n\nVCDParser.parse(\n\t`\n\t$date\n\tTue Feb 12 14:01:15 2019\n\t$end\n\t$version\n\tIcarus Verilog\n\t$end\n\t$timescale\n\t1ns\n\t$end\n\t$scope module test_tb $end\n\t$var reg 1 ! clk $end\n\t$var wire 1 \" rst $end\n\t$upscope $end\n\t$enddefinitions $end\n\t#0\n\t$dumpvars\n\t0\"\n\t0!\n\t$end\n\t#15\n\t1\"\n\t#20\n\t1!\n\t#40\n\t0!\n\t#60\n\t1!\n\t#80\n\t0!\n\t#100\n\t1!\n\t#115\n`\n)\n\t.then(parsedData => {\n\t\tconsole.log(parsedData);\n\t\t// {\n\t\t// \t\"date\": \"Tue Feb 12 14:01:15 2019\",\n\t\t// \t\"version\": \"Icarus Verilog\",\n\t\t// \t\"timescale\": \"1ns\",\n\t\t// \t\"endtime\": \"115\",\n\t\t// \t\"scale\": \"1ns\",\n\t\t// \t\"signal\": [\n\t\t// \t\t{\n\t\t// \t\t\t\"type\": \"reg\",\n\t\t// \t\t\t\"size\": 1,\n\t\t// \t\t\t\"refName\": \"!\",\n\t\t// \t\t\t\"signalName\": \"clk\",\n\t\t// \t\t\t\"module\": \"test_tb\",\n\t\t// \t\t\t\"name\": \"test_tb.clk\",\n\t\t// \t\t\t\"wave\": [\n\t\t// \t\t\t\t[\n\t\t// \t\t\t\t\t\"0\",\n\t\t// \t\t\t\t\t\"0\"\n\t\t// \t\t\t\t],\n\t\t// \t\t\t\t[\n\t\t// \t\t\t\t\t\"20\",\n\t\t// \t\t\t\t\t\"1\"\n\t\t// \t\t\t\t],\n\t\t// \t\t\t\t[\n\t\t// \t\t\t\t\t\"40\",\n\t\t// \t\t\t\t\t\"0\"\n\t\t// \t\t\t\t],\n\t\t// \t\t\t\t[\n\t\t// \t\t\t\t\t\"60\",\n\t\t// \t\t\t\t\t\"1\"\n\t\t// \t\t\t\t],\n\t\t// \t\t\t\t[\n\t\t// \t\t\t\t\t\"80\",\n\t\t// \t\t\t\t\t\"0\"\n\t\t// \t\t\t\t],\n\t\t// \t\t\t\t[\n\t\t// \t\t\t\t\t\"100\",\n\t\t// \t\t\t\t\t\"1\"\n\t\t// \t\t\t\t]\n\t\t// \t\t\t]\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"type\": \"wire\",\n\t\t// \t\t\t\"size\": 1,\n\t\t// \t\t\t\"refName\": \"\\\"\",\n\t\t// \t\t\t\"signalName\": \"rst\",\n\t\t// \t\t\t\"module\": \"test_tb\",\n\t\t// \t\t\t\"name\": \"test_tb.rst\",\n\t\t// \t\t\t\"wave\": [\n\t\t// \t\t\t\t[\n\t\t// \t\t\t\t\t\"0\",\n\t\t// \t\t\t\t\t\"0\"\n\t\t// \t\t\t\t],\n\t\t// \t\t\t\t[\n\t\t// \t\t\t\t\t\"15\",\n\t\t// \t\t\t\t\t\"1\"\n\t\t// \t\t\t\t]\n\t\t// \t\t\t]\n\t\t// \t\t}\n\t\t// \t]\n\t\t// }\n\t})\n\t.catch(err => {\n\t\tconsole.error(err);\n\t});"]},"metadata":{},"sourceType":"module"}