{"ast":null,"code":"var _jsxFileName = \"/Users/thomasdhome/Documents/thomas/Princeton/Job/ELE206/VerilogTrafficLightViewer/pages/components/SignalCard.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Card } from 'antd';\nimport TrafficLight from './TrafficLight';\nimport DropdownSelector from './DropdownSelector';\n\nconst SignalCard = props => {\n  const [SignalAvailableIndex, setSignalAvailableIndex] = React.useState(0);\n  let counter = 0;\n  const signalString = props.vcdObj.hasOwnProperty('signal') ? props.vcdObj.signal[SignalAvailableIndex].wave[counter][1] : '000';\n\n  if (props.vcdObj.hasOwnProperty('signal')) {\n    const timeArray = props.vcdObj.signal[SignalAvailableIndex].wave; // current requested time is props.index\n\n    while (timeArray[counter][0] < props.index && counter < timeArray.length()) {\n      counter++;\n    }\n\n    if (counter == timeArray.length()) counter--;else if (timeArray[counter][0] < props.index) counter--;\n  }\n\n  return __jsx(Card, {\n    title: props.street,\n    style: {\n      width: 300,\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(DropdownSelector, {\n    index: props.index,\n    vcdObj: props.vcdObj,\n    setSignalAvailableIndex: setSignalAvailableIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), __jsx(TrafficLight, {\n    value: signalString,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default SignalCard;","map":{"version":3,"sources":["/Users/thomasdhome/Documents/thomas/Princeton/Job/ELE206/VerilogTrafficLightViewer/pages/components/SignalCard.tsx"],"names":["React","Card","TrafficLight","DropdownSelector","SignalCard","props","SignalAvailableIndex","setSignalAvailableIndex","useState","counter","signalString","vcdObj","hasOwnProperty","signal","wave","timeArray","index","length","street","width","marginRight"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAIA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDP,KAAK,CAACQ,QAAN,CAAe,CAAf,CAAxD;AAEA,MAAIC,OAAO,GAAG,CAAd;AAEA,QAAMC,YAAY,GAAIL,KAAK,CAACM,MAAN,CAAaC,cAAb,CAA4B,QAA5B,IAAwCP,KAAK,CAACM,MAAN,CAAaE,MAAb,CAAoBP,oBAApB,EAA0CQ,IAA1C,CAA+CL,OAA/C,EAAwD,CAAxD,CAAxC,GAAqG,KAA3H;;AACA,MAAIJ,KAAK,CAACM,MAAN,CAAaC,cAAb,CAA4B,QAA5B,CAAJ,EAA2C;AAEvC,UAAMG,SAAS,GAAGV,KAAK,CAACM,MAAN,CAAaE,MAAb,CAAoBP,oBAApB,EAA0CQ,IAA5D,CAFuC,CAGvC;;AACA,WAAMC,SAAS,CAACN,OAAD,CAAT,CAAmB,CAAnB,IAAsBJ,KAAK,CAACW,KAA5B,IAAqCP,OAAO,GAACM,SAAS,CAACE,MAAV,EAAnD,EAAsE;AAClER,MAAAA,OAAO;AACV;;AACD,QAAGA,OAAO,IAAIM,SAAS,CAACE,MAAV,EAAd,EAAkCR,OAAO,GAAzC,KACK,IAAIM,SAAS,CAACN,OAAD,CAAT,CAAmB,CAAnB,IAAsBJ,KAAK,CAACW,KAAhC,EAAuCP,OAAO;AAEtD;;AAED,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,KAAK,CAACa,MAAnB;AAA2B,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,WAAW,EAAE;AAA3B,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEf,KAAK,CAACW,KAA/B;AAAsC,IAAA,MAAM,EAAEX,KAAK,CAACM,MAApD;AAA4D,IAAA,uBAAuB,EAAEJ,uBAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEG,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CAxBD;;AA0BA,eAAeN,UAAf","sourcesContent":["import React from 'react'\nimport { Card } from 'antd';\nimport TrafficLight from './TrafficLight'\nimport DropdownSelector from './DropdownSelector'\n\n\n\nconst SignalCard = (props) => {\n    const [SignalAvailableIndex, setSignalAvailableIndex] = React.useState(0)\n\n    let counter = 0\n\n    const signalString = (props.vcdObj.hasOwnProperty('signal') ? props.vcdObj.signal[SignalAvailableIndex].wave[counter][1] : '000')\n    if (props.vcdObj.hasOwnProperty('signal')) {\n        \n        const timeArray = props.vcdObj.signal[SignalAvailableIndex].wave\n        // current requested time is props.index\n        while(timeArray[counter][0]<props.index && counter<timeArray.length()){\n            counter++\n        }\n        if(counter == timeArray.length()) counter--\n        else if (timeArray[counter][0]<props.index) counter--\n    \n    }\n\n    return (\n        <Card title={props.street} style={{ width: 300, marginRight: 10 }}>\n            <DropdownSelector index={props.index} vcdObj={props.vcdObj} setSignalAvailableIndex={setSignalAvailableIndex} />\n            <TrafficLight value={signalString} />\n        </Card>\n    )\n}\n\nexport default SignalCard"]},"metadata":{},"sourceType":"module"}