{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Card } from 'antd';\nimport TrafficLight from './TrafficLight';\nimport DropdownSelector from './DropdownSelector';\n\nvar SignalCard = function SignalCard(props) {\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      SignalAvailableIndex = _React$useState2[0],\n      setSignalAvailableIndex = _React$useState2[1]; // find greatest array index for which t (time in array) < props.time (time on slider)\n\n\n  var timeindex = 0;\n\n  if (props.vcdObj.hasOwnProperty('signal')) {\n    var timeArray = props.vcdObj.signal[SignalAvailableIndex].wave;\n\n    while (props.time > timeArray[timeindex][0] && timeindex < timeArray.length) {\n      timeindex++;\n    }\n\n    if (timeindex == timeArray.length || props.time < timeArray[timeindex][0]) timeindex--;\n  } // get string of signal from array at timeindex\n\n\n  var signalString = props.vcdObj.hasOwnProperty('signal') ? props.vcdObj.signal[SignalAvailableIndex].wave[timeindex][1] : '000';\n  return __jsx(Card, {\n    title: props.street,\n    style: {\n      width: 300,\n      marginRight: 30\n    }\n  }, __jsx(DropdownSelector, {\n    vcdObj: props.vcdObj,\n    setSignalAvailableIndex: setSignalAvailableIndex\n  }), __jsx(TrafficLight, {\n    value: signalString\n  }));\n};\n\nexport default SignalCard;","map":null,"metadata":{},"sourceType":"module"}