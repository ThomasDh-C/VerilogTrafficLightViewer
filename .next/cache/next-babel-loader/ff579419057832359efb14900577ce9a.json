{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/thomasdhome/Documents/thomas/Princeton/Job/ELE206/VerilogTrafficLightViewer/pages/components/SignalCard.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Card } from 'antd';\nimport TrafficLight from './TrafficLight';\nimport DropdownSelector from './DropdownSelector';\n\nvar SignalCard = function SignalCard(props) {\n  _s();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      SignalAvailableIndex = _React$useState2[0],\n      setSignalAvailableIndex = _React$useState2[1];\n\n  var counter = 0;\n\n  if (props.vcdObj.hasOwnProperty('signal')) {\n    var timeArray = props.vcdObj.signal[SignalAvailableIndex].wave; // current requested time is props.time\n\n    while (props.time > timeArray[counter][0] && counter < timeArray.length) {\n      counter++;\n    }\n\n    if (counter == timeArray.length || props.time < timeArray[counter][0]) counter--;\n  }\n\n  var signalString = props.vcdObj.hasOwnProperty('signal') ? props.vcdObj.signal[SignalAvailableIndex].wave[counter][1] : '000';\n  return __jsx(Card, {\n    title: props.street,\n    style: {\n      width: 300,\n      marginRight: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(DropdownSelector, {\n    vcdObj: props.vcdObj,\n    setSignalAvailableIndex: setSignalAvailableIndex,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), __jsx(TrafficLight, {\n    value: signalString,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(SignalCard, \"XQkdlgNGCxcS/geRBLlwTalehME=\");\n\n_c = SignalCard;\nexport default SignalCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignalCard\");","map":{"version":3,"sources":["/Users/thomasdhome/Documents/thomas/Princeton/Job/ELE206/VerilogTrafficLightViewer/pages/components/SignalCard.tsx"],"names":["React","Card","TrafficLight","DropdownSelector","SignalCard","props","useState","SignalAvailableIndex","setSignalAvailableIndex","counter","vcdObj","hasOwnProperty","timeArray","signal","wave","time","length","signalString","street","width","marginRight"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAIA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA;;AAAA,wBAC8BL,KAAK,CAACM,QAAN,CAAe,CAAf,CAD9B;AAAA;AAAA,MACnBC,oBADmB;AAAA,MACGC,uBADH;;AAG1B,MAAIC,OAAO,GAAG,CAAd;;AACA,MAAIJ,KAAK,CAACK,MAAN,CAAaC,cAAb,CAA4B,QAA5B,CAAJ,EAA2C;AACvC,QAAMC,SAAS,GAAGP,KAAK,CAACK,MAAN,CAAaG,MAAb,CAAoBN,oBAApB,EAA0CO,IAA5D,CADuC,CAEvC;;AACA,WAAOT,KAAK,CAACU,IAAN,GAAaH,SAAS,CAACH,OAAD,CAAT,CAAmB,CAAnB,CAAb,IAAsCA,OAAO,GAAGG,SAAS,CAACI,MAAjE,EAAyE;AACrEP,MAAAA,OAAO;AACV;;AACD,QAAIA,OAAO,IAAIG,SAAS,CAACI,MAArB,IAA+BX,KAAK,CAACU,IAAN,GAAaH,SAAS,CAACH,OAAD,CAAT,CAAmB,CAAnB,CAAhD,EAAuEA,OAAO;AACjF;;AAED,MAAMQ,YAAY,GAAIZ,KAAK,CAACK,MAAN,CAAaC,cAAb,CAA4B,QAA5B,IAAwCN,KAAK,CAACK,MAAN,CAAaG,MAAb,CAAoBN,oBAApB,EAA0CO,IAA1C,CAA+CL,OAA/C,EAAwD,CAAxD,CAAxC,GAAqG,KAA3H;AAEA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,KAAK,CAACa,MAAnB;AAA2B,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,WAAW,EAAE;AAA3B,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,MAAM,EAAEf,KAAK,CAACK,MAAhC;AAAwC,IAAA,uBAAuB,EAAEF,uBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,YAAD;AAAc,IAAA,KAAK,EAAES,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CArBD;;GAAMb,U;;KAAAA,U;AAuBN,eAAeA,UAAf","sourcesContent":["import React from 'react'\nimport { Card } from 'antd';\nimport TrafficLight from './TrafficLight'\nimport DropdownSelector from './DropdownSelector'\n\n\n\nconst SignalCard = (props) => {\n    const [SignalAvailableIndex, setSignalAvailableIndex] = React.useState(0)\n\n    let counter = 0\n    if (props.vcdObj.hasOwnProperty('signal')) {\n        const timeArray = props.vcdObj.signal[SignalAvailableIndex].wave\n        // current requested time is props.time\n        while (props.time > timeArray[counter][0] && counter < timeArray.length) {\n            counter++\n        }\n        if (counter == timeArray.length || props.time < timeArray[counter][0]) counter-- \n    }\n\n    const signalString = (props.vcdObj.hasOwnProperty('signal') ? props.vcdObj.signal[SignalAvailableIndex].wave[counter][1] : '000')\n\n    return (\n        <Card title={props.street} style={{ width: 300, marginRight: 30 }}>\n            <DropdownSelector vcdObj={props.vcdObj} setSignalAvailableIndex={setSignalAvailableIndex} />\n            <TrafficLight value={signalString} />\n        </Card>\n    )\n}\n\nexport default SignalCard"]},"metadata":{},"sourceType":"module"}