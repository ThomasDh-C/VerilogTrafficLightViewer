{"ast":null,"code":"var _jsxFileName = \"/Users/thomasdhome/Documents/thomas/Princeton/Job/ELE206/VerilogTrafficLightViewer/pages/components/SignalCard.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Card } from 'antd';\nimport TrafficLight from './TrafficLight';\nimport DropdownSelector from './DropdownSelector';\n\nconst SignalCard = props => {\n  const [SignalAvailableIndex, setSignalAvailableIndex] = React.useState(0);\n  let counter = 0;\n\n  if (props.vcdObj.hasOwnProperty('signal')) {\n    console.log(vcd);\n    const timeArray = props.vcdObj.signal[SignalAvailableIndex].wave; // current requested time is props.index\n\n    while (timeArray[counter][0] < props.index && counter < timeArray.length) {\n      counter++;\n    }\n\n    if (counter == timeArray.length) counter--;else if (timeArray[counter][0] < props.index) counter--;\n  }\n\n  const signalString = props.vcdObj.hasOwnProperty('signal') ? props.vcdObj.signal[SignalAvailableIndex].wave[counter][1] : '000';\n  return __jsx(Card, {\n    title: props.street,\n    style: {\n      width: 300,\n      marginRight: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(DropdownSelector, {\n    index: props.index,\n    vcdObj: props.vcdObj,\n    setSignalAvailableIndex: setSignalAvailableIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), __jsx(TrafficLight, {\n    value: signalString,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default SignalCard;","map":{"version":3,"sources":["/Users/thomasdhome/Documents/thomas/Princeton/Job/ELE206/VerilogTrafficLightViewer/pages/components/SignalCard.tsx"],"names":["React","Card","TrafficLight","DropdownSelector","SignalCard","props","SignalAvailableIndex","setSignalAvailableIndex","useState","counter","vcdObj","hasOwnProperty","console","log","vcd","timeArray","signal","wave","index","length","signalString","street","width","marginRight"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAIA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDP,KAAK,CAACQ,QAAN,CAAe,CAAf,CAAxD;AAEA,MAAIC,OAAO,GAAG,CAAd;;AACA,MAAIJ,KAAK,CAACK,MAAN,CAAaC,cAAb,CAA4B,QAA5B,CAAJ,EAA2C;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACA,UAAMC,SAAS,GAAGV,KAAK,CAACK,MAAN,CAAaM,MAAb,CAAoBV,oBAApB,EAA0CW,IAA5D,CAFuC,CAGvC;;AACA,WAAOF,SAAS,CAACN,OAAD,CAAT,CAAmB,CAAnB,IAAwBJ,KAAK,CAACa,KAA9B,IAAuCT,OAAO,GAAGM,SAAS,CAACI,MAAlE,EAA0E;AACtEV,MAAAA,OAAO;AACV;;AACD,QAAIA,OAAO,IAAIM,SAAS,CAACI,MAAzB,EAAiCV,OAAO,GAAxC,KACK,IAAIM,SAAS,CAACN,OAAD,CAAT,CAAmB,CAAnB,IAAwBJ,KAAK,CAACa,KAAlC,EAAyCT,OAAO;AACxD;;AAED,QAAMW,YAAY,GAAIf,KAAK,CAACK,MAAN,CAAaC,cAAb,CAA4B,QAA5B,IAAwCN,KAAK,CAACK,MAAN,CAAaM,MAAb,CAAoBV,oBAApB,EAA0CW,IAA1C,CAA+CR,OAA/C,EAAwD,CAAxD,CAAxC,GAAqG,KAA3H;AAEA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,KAAK,CAACgB,MAAnB;AAA2B,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,WAAW,EAAE;AAA3B,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,KAAK,EAAElB,KAAK,CAACa,KAA/B;AAAsC,IAAA,MAAM,EAAEb,KAAK,CAACK,MAApD;AAA4D,IAAA,uBAAuB,EAAEH,uBAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEa,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CAvBD;;AAyBA,eAAehB,UAAf","sourcesContent":["import React from 'react'\nimport { Card } from 'antd';\nimport TrafficLight from './TrafficLight'\nimport DropdownSelector from './DropdownSelector'\n\n\n\nconst SignalCard = (props) => {\n    const [SignalAvailableIndex, setSignalAvailableIndex] = React.useState(0)\n\n    let counter = 0\n    if (props.vcdObj.hasOwnProperty('signal')) {\n        console.log(vcd)\n        const timeArray = props.vcdObj.signal[SignalAvailableIndex].wave\n        // current requested time is props.index\n        while (timeArray[counter][0] < props.index && counter < timeArray.length) {\n            counter++\n        }\n        if (counter == timeArray.length) counter--\n        else if (timeArray[counter][0] < props.index) counter--\n    }\n\n    const signalString = (props.vcdObj.hasOwnProperty('signal') ? props.vcdObj.signal[SignalAvailableIndex].wave[counter][1] : '000')\n\n    return (\n        <Card title={props.street} style={{ width: 300, marginRight: 30 }}>\n            <DropdownSelector index={props.index} vcdObj={props.vcdObj} setSignalAvailableIndex={setSignalAvailableIndex} />\n            <TrafficLight value={signalString} />\n        </Card>\n    )\n}\n\nexport default SignalCard"]},"metadata":{},"sourceType":"module"}