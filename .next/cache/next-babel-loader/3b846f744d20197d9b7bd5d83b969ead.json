{"ast":null,"code":"var _jsxFileName = \"/Users/thomasdhome/Documents/thomas/Princeton/Job/ELE206/VerilogTrafficLightViewer/pages/components/SignalCard.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Card } from 'antd';\nimport TrafficLight from './TrafficLight';\nimport DropdownSelector from './DropdownSelector';\n\nconst SignalCard = props => {\n  const [SignalAvailableIndex, setSignalAvailableIndex] = React.useState(0); // current requested time is props.index\n\n  const signalString = props.vcdObj.hasOwnProperty('signal') ? props.vcdObj.signal[SignalAvailableIndex].wave[props.index][1] : '000';\n\n  if (props.vcdObj.hasOwnProperty('signal')) {\n    let counter = 0;\n    const timeArray = props.vcdObj.signal[SignalAvailableIndex].wave; // current requested time is props.index\n\n    while (timeArray[counter][0] < props.index && counter < timeArray.length()) {\n      counter++;\n    }\n\n    if (counter == timeArray.length()) counter--;else if (timeArray[counter][0] < props.index) counter--;\n  }\n\n  return __jsx(Card, {\n    title: props.street,\n    style: {\n      width: 300,\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(DropdownSelector, {\n    index: props.index,\n    vcdObj: props.vcdObj,\n    setSignalAvailableIndex: setSignalAvailableIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), __jsx(TrafficLight, {\n    value: signalString,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default SignalCard;","map":{"version":3,"sources":["/Users/thomasdhome/Documents/thomas/Princeton/Job/ELE206/VerilogTrafficLightViewer/pages/components/SignalCard.tsx"],"names":["React","Card","TrafficLight","DropdownSelector","SignalCard","props","SignalAvailableIndex","setSignalAvailableIndex","useState","signalString","vcdObj","hasOwnProperty","signal","wave","index","counter","timeArray","length","street","width","marginRight"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAIA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDP,KAAK,CAACQ,QAAN,CAAe,CAAf,CAAxD,CAD0B,CAG1B;;AAGA,QAAMC,YAAY,GAAIJ,KAAK,CAACK,MAAN,CAAaC,cAAb,CAA4B,QAA5B,IAAwCN,KAAK,CAACK,MAAN,CAAaE,MAAb,CAAoBN,oBAApB,EAA0CO,IAA1C,CAA+CR,KAAK,CAACS,KAArD,EAA4D,CAA5D,CAAxC,GAAyG,KAA/H;;AACA,MAAIT,KAAK,CAACK,MAAN,CAAaC,cAAb,CAA4B,QAA5B,CAAJ,EAA2C;AACvC,QAAII,OAAO,GAAG,CAAd;AACA,UAAMC,SAAS,GAAGX,KAAK,CAACK,MAAN,CAAaE,MAAb,CAAoBN,oBAApB,EAA0CO,IAA5D,CAFuC,CAGvC;;AACA,WAAMG,SAAS,CAACD,OAAD,CAAT,CAAmB,CAAnB,IAAsBV,KAAK,CAACS,KAA5B,IAAqCC,OAAO,GAACC,SAAS,CAACC,MAAV,EAAnD,EAAsE;AAClEF,MAAAA,OAAO;AACV;;AACD,QAAGA,OAAO,IAAIC,SAAS,CAACC,MAAV,EAAd,EAAkCF,OAAO,GAAzC,KACK,IAAIC,SAAS,CAACD,OAAD,CAAT,CAAmB,CAAnB,IAAsBV,KAAK,CAACS,KAAhC,EACLC,OAAO;AACV;;AAED,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,KAAK,CAACa,MAAnB;AAA2B,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,WAAW,EAAE;AAA3B,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEf,KAAK,CAACS,KAA/B;AAAsC,IAAA,MAAM,EAAET,KAAK,CAACK,MAApD;AAA4D,IAAA,uBAAuB,EAAEH,uBAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEE,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CAzBD;;AA2BA,eAAeL,UAAf","sourcesContent":["import React from 'react'\nimport { Card } from 'antd';\nimport TrafficLight from './TrafficLight'\nimport DropdownSelector from './DropdownSelector'\n\n\n\nconst SignalCard = (props) => {\n    const [SignalAvailableIndex, setSignalAvailableIndex] = React.useState(0)\n\n    // current requested time is props.index\n    \n\n    const signalString = (props.vcdObj.hasOwnProperty('signal') ? props.vcdObj.signal[SignalAvailableIndex].wave[props.index][1] : '000')\n    if (props.vcdObj.hasOwnProperty('signal')) {\n        let counter = 0\n        const timeArray = props.vcdObj.signal[SignalAvailableIndex].wave\n        // current requested time is props.index\n        while(timeArray[counter][0]<props.index && counter<timeArray.length()){\n            counter++\n        }\n        if(counter == timeArray.length()) counter--\n        else if (timeArray[counter][0]<props.index)\n        counter--\n    }\n\n    return (\n        <Card title={props.street} style={{ width: 300, marginRight: 10 }}>\n            <DropdownSelector index={props.index} vcdObj={props.vcdObj} setSignalAvailableIndex={setSignalAvailableIndex} />\n            <TrafficLight value={signalString} />\n        </Card>\n    )\n}\n\nexport default SignalCard"]},"metadata":{},"sourceType":"module"}